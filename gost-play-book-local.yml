---
- hosts: local
  become: yes
  vars_files:
    - vault.yml

  vars:
    ## config paths
    local_config_path: "./gost-config-local.json.j2"
    remote_config_file_path: "/opt/gost/cmd/gost/gost-config-local.json"

    ## proxy server IP ( used in jinja2 template for gost config file )
    destination_server_ip: "135.181.174.231"

    ## vars for build and configuration
    app_name: gost
    app_path: /opt/gost/cmd/gost/
    app_binary: gost
    app_args:  -C /opt/gost/cmd/gost/gost-config-local.json
    app_user: root
    app_group: root

    go_privet_repo_address: http://135.181.174.200:8123/repository/go-proxy/
    git_repo_address: https://github.com/ginuerzh/gost.git
    git_clone_path: /opt/gost
    gost_build_path: /opt/gost/cmd/gost/


  tasks:
    #### install dependancies
    - name: Update package cache
      apt:
        update_cache: yes
      retries: 5

    - name: Install Git
      package:
        name: git

    - name: Install Go
      package:
        name: golang-go
    ##

    - name: Clone gost repository
      git:
        repo: "{{ git_repo_address }}"
        dest: "{{ git_clone_path }}"

    - name: Set environment variable persistently
      lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: "export GOPROXY={{ go_privet_repo_address }}"
        create: yes
      become: yes
      become_user: "{{ ansible_user }}"


    - name: Build gost ( with GOPROXY )
      shell: "cd {{ gost_build_path }} && go build"

    # - name: Copy Gost configuration template
    #   ansible.builtin.template:
    #     src: "{{ local_config_path }}"
    #     dest: "{{ gost_build_path }}/{{ local_config_path }}"
    #   tags:
    #     - copy_config

    - name: Copy and render(pass) gost config file
      ansible.builtin.template:
        src: "{{ local_config_path }}"
        dest: "{{ remote_config_file_path }}"
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
      notify: Reload systemd

    # - name: Run Gost with config file
    #   command: /opt/gost/cmd/gost/gost -C /opt/gost/cmd/gost/gost-config-local.json  >> /var/log/gost.log &
    #   async: 0


    - name: Create systemd service file
      ansible.builtin.template:
        src: gost.service.j2
        dest: "/etc/systemd/system/{{ app_name }}.service"
        mode: '0644'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
      notify: Reload systemd

    - name: Start and enable the systemd service
      ansible.builtin.service:
        name: "{{ app_name }}"
        state: started
        enabled: yes
      notify: Restart service


  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        name: "{{ app_name }}"
        # state: reloaded
        daemon_reload: true

    - name: Restart service
      ansible.builtin.service:
        name: "{{ app_name }}"
        state: restarted